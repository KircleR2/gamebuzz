# Generated by Django 5.2.3 on 2025-06-19 02:13

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "slug",
                    models.SlugField(
                        blank=True, max_length=100, null=True, unique=True
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "order",
                    models.IntegerField(
                        default=0,
                        help_text="Order in which the category should be displayed",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subcategories",
                        to="events.category",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Categories",
                "ordering": ["order", "name"],
                "unique_together": {("name", "parent")},
            },
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("slug", models.SlugField(blank=True, max_length=200, unique=True)),
                ("description", models.TextField()),
                (
                    "short_description",
                    models.CharField(
                        blank=True,
                        help_text="A brief description for listings",
                        max_length=200,
                    ),
                ),
                ("organizer_name", models.CharField(max_length=100)),
                ("organizer_description", models.TextField(blank=True)),
                (
                    "organizer_logo",
                    models.ImageField(
                        blank=True, null=True, upload_to="organizer_logos/"
                    ),
                ),
                ("start_date", models.DateField()),
                ("start_time", models.TimeField()),
                ("end_date", models.DateField()),
                ("end_time", models.TimeField()),
                ("timezone", models.CharField(default="EDT", max_length=50)),
                ("location_name", models.CharField(max_length=255)),
                ("address", models.CharField(max_length=255)),
                ("address_2", models.CharField(blank=True, max_length=255)),
                ("city", models.CharField(max_length=100)),
                ("state_province", models.CharField(max_length=100)),
                ("zip_code", models.CharField(max_length=20)),
                ("country", models.CharField(default="United States", max_length=100)),
                (
                    "venue_directions",
                    models.TextField(
                        blank=True,
                        help_text="Directions to the venue, parking info, etc.",
                    ),
                ),
                (
                    "tags",
                    models.CharField(
                        blank=True, help_text="Comma-separated tags", max_length=500
                    ),
                ),
                (
                    "featured_image",
                    models.ImageField(
                        blank=True, null=True, upload_to="events_images/"
                    ),
                ),
                (
                    "image_gallery",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of additional image URLs",
                    ),
                ),
                (
                    "video_url",
                    models.URLField(
                        blank=True, help_text="Link to video (YouTube, Vimeo, etc.)"
                    ),
                ),
                ("max_capacity", models.PositiveIntegerField(blank=True, null=True)),
                ("registration_required", models.BooleanField(default=False)),
                (
                    "registration_url",
                    models.URLField(
                        blank=True, help_text="External registration/ticketing URL"
                    ),
                ),
                ("is_free", models.BooleanField(default=True)),
                (
                    "price_display",
                    models.CharField(
                        blank=True,
                        help_text="e.g., 'Free', '$10-$25', 'Starting at $19.99'",
                        max_length=100,
                    ),
                ),
                (
                    "faq",
                    models.JSONField(
                        blank=True, default=list, help_text="List of FAQ items"
                    ),
                ),
                (
                    "additional_info",
                    models.TextField(
                        blank=True,
                        help_text="Any additional information about the event",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("published", "Published"),
                            ("cancelled", "Cancelled"),
                            ("ended", "Ended"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                ("is_featured", models.BooleanField(default=False)),
                ("is_published", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="events",
                        to="events.category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Event",
                "verbose_name_plural": "Events",
                "ordering": ["-start_date", "-start_time"],
                "indexes": [
                    models.Index(
                        fields=["start_date", "status"],
                        name="events_even_start_d_9e40f1_idx",
                    ),
                    models.Index(
                        fields=["is_featured"], name="events_even_is_feat_765082_idx"
                    ),
                ],
            },
        ),
    ]
